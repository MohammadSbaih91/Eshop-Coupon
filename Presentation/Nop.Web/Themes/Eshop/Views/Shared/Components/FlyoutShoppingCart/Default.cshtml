@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Http
@model MiniShoppingCartModel
@{
    const string subDomain = ".local.com"; //TODO: change to in production ".orange.jo" and uncomment domain
    var cart = await Html.PartialAsync("FlyoutCart.cshtml", Model);
    var html = Regex.Replace(cart.RenderHtmlContent(), @"[ \t]+", " ").Replace("\n", " ");
    
    var options = new CookieOptions
    {
        HttpOnly = false,
        SameSite = SameSiteMode.None,
        Secure = false, 
        Expires = DateTimeOffset.Now.AddDays(7),
       //Domain = subDomain 
    };
    
    ViewContext.HttpContext.Response.Cookies.Append("cart", html, options);
}

@cart

<script asp-location="Footer">
     function setCookie(cname, cvalue, exdays) {
       var d = new Date();
       var domain ="@subDomain";
       exdays = exdays || 7;
       d.setTime(d.getTime() + (exdays*24*60*60*1000));
       var expires = "expires="+ d.toUTCString();
       document.cookie = cname + "=" + cvalue + ";" + expires + "domain=" + domain + ";path=/;hostOnly=false";
     }
     
     function getCookie (name) {
        var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        if (match) return match[2];
     }
     
     function eraseCookie(name) {   
         document.cookie = name+'=; Max-Age=-99999999;';  
     }
     
     function setCartCookies(){
          var cart = JSON.stringify($("#flyout-cart")[0].outerHTML);
          cart = encodeURIComponent(cart.replace(/\s+/g,' ').trim());
          setCookie("cart", cart);
     }
     
     function getCartCookies(){
        var cart = getCookie("cart");
        cart = decodeURIComponent(cart);
        return cart;
     }
</script>