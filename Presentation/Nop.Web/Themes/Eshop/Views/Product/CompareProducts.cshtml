@using Nop.Core.Domain.Orders
@using Nop.Services.Catalog
@using Nop.Core.Domain.Catalog
@using Nop.Web.Factories

@model CompareProductsModel

@inject ICategoryService categoryService
@inject IProductService productService
@inject ISpecificationAttributeGroupModelFactory specificationAttributeGroupModelFactory
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.CompareProducts").Text);
    //page class
    Html.AppendPageCssClassParts("html-compare-products-page");
}
@{
    var columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(90M / Model.Products.Count), 0).ToString() + "%";
    }

    var groups = specificationAttributeGroupModelFactory.getSpecificationAttributeWithSpecAttrib();

    var specificationAttributes = new List<ProductSpecificationModel>();
    foreach (var product in Model.Products)
    {
        foreach (var attribute in product.SpecificationAttributeModels)
        {
            if (specificationAttributes.FirstOrDefault(sa => sa.SpecificationAttributeId == attribute.SpecificationAttributeId) == null)
            {
                specificationAttributes.Add(attribute);

                if (groups.Where(p => p.SpecificationIds.Contains(attribute.SpecificationAttributeId)).Any())
                {
                    groups.Where(p => p.SpecificationIds.Contains(attribute.SpecificationAttributeId)).FirstOrDefault().SpecificationAttributeModels.Add(attribute);
                }
                else
                {
                    groups.Where(p => p.Id == -1).FirstOrDefault().SpecificationAttributeModels.Add(attribute);
                }

            }
        }
    }


    var productCategory = new ProductCategory();
    foreach (var product in Model.Products)
    {
        var category = categoryService.GetProductCategoriesByProductId(product.Id);
        if (category.Count() > 0)
        {
            productCategory = category.LastOrDefault();
            break;
        }
    }
}
<nop-antiforgery-token />
<div class="page compare-products-page">
    <div class="compare-new-page">
        <div class="breadcrumb-flex">
            @*<div class="breadcrumb-back"><i class="fas fa-angle-left"></i>Back to Mobile Device</div>
                <div class="breadcrumb breadcrumb-bg comp-breadcrumb">
                    <ul>
                        <li>
                            <span>
                                <a href="#">
                                    <span>Personal</span>
                                </a>
                            </span>
                            <span class="delimiter"><i class="fas fa-angle-right"></i></span>
                        </li>
                        <li>
                            <a href="/en">
                                <span itemprop="name">eShop</span>
                            </a>
                            <span class="delimiter"><i class="fas fa-angle-right"></i></span>
                        </li>
                        <li>
                            <strong class="current-item">Mobile Comparator</strong>
                        </li>
                    </ul>
                </div>*@
        </div>
    </div>
    @if (Model.Products.Count > 0)
    {
        <div class="compare-new-page page-body">

            <div class="comp-title">
                <div class="page-title">
                    <h1 class="compare-title">@T("Products.Compare.Title")</h1>
                    <div class="product-compare-search-box compare-search">
                        @await Html.PartialAsync("ProductCompareSearchBox", new SearchBoxModel
                        {
                            AutoCompleteEnabled = true,
                            SearchTermMinimumLength = 3
                        })
                    </div>
                    <a href="#" onclick="setLocation('@Url.RouteUrl("ClearCompareList")')" class="clear-list">@T("Admin.Catalog.ComparePage.EmptyButton")</a>
                </div>
            </div>
            @*new Code*@
            <div class="comp-product">
                <div class="comp-product-data">
                    <div class="comp-common-grid">
                        <div class="other name"></div>
                        <div class="grid-group">
                            @{int productListed = 0;}
                            @foreach (var product in Model.Products)
                            {
                                productListed++;
                                var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
                                var quantity = 1;
                                var buyNow = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = true });
                                var addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
                                var prd = productService.GetProductById(product.Id);
                                <div class="other">
                                    <div class="comp-item">
                                        <div class="remove-item" onclick="setLocation('@Url.RouteUrl("RemoveProductFromCompareList", new {productId = product.Id})')"><i class="circle"></i></div>
                                        <a href="@UrlStrucutre.UrlDecode(Url.RouteUrl("Product", new {SeName = product.SeName}))" class="name">@product.Name</a>
                                        <div class="comp-pic">
                                            <a href="@UrlStrucutre.UrlDecode(Url.RouteUrl("Product", new {SeName = product.SeName}))">
                                                <img alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" />
                                            </a>
                                        </div>
                                        <div class="comp-prices">@product.ProductPrice.Price</div>
                                        @if (prd.IsFreeShipping)
                                        {
                                            <div class="shipping-status">@T("Admin.Catalog.ComparePage.FreeShipping")</div>
                                        }
                                        else
                                        {
                                            <div class="shipping-status">&nbsp;</div>
                                        }
                                        <div class="show-more">
                                            <div class="show-label">@T("Admin.Catalog.ComparePage.ShowMore")<i class="fas fa-chevron-down"></i></div>
                                            <div class="desc">
                                                @Html.Raw(product.ShortDescription)
                                            </div>
                                        </div>
                                        <div class="comp-btn">
                                            <input type="button" value="@T("Admin.Catalog.ComparePage.AddToCart")" class="btn-block btn btn-outline-primary" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />
                                            <input type="button" value="@T("Admin.Catalog.ComparePage.Buynow")" class="btn-block btn btn-primary" onclick="AjaxCart.addproducttocart_catalog('@buyNow');return false;" />
                                        </div>
                                    </div>
                                </div>
                            }
                            @for (int i = productListed; i < 4; i++)
                            {
                                <div class="other">
                                    <div class="comp-item comp-add-product">
                                        <div class="comp-pic">
                                            <a>
                                                <img src="~/Themes/Eshop/Content/images/mobile-screen.svg" />
                                            </a>
                                            <div class="add-prd">
                                                <i class="fas fa-plus-circle"></i>
                                                <span>@T("Admin.Catalog.ComparePage.AddProduct")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="comp-back"></div>
                </div>
            </div>

            <div class="comp-according">
                <ul>
                    @foreach (var grp in groups)
                    {
                        <li>
                            <a class="toggleData"><i class="fas fa-caret-down"></i>@grp.Name</a>
                            <div class="inner">
                                @foreach (var specificationAttribute in grp.SpecificationAttributeModels)
                                {
                                    <div class="comp-common-grid comp-common-grid-sepc">
                                        <div class="other spec-name">@specificationAttribute.SpecificationAttributeName</div>
                                        <div class="grid-group">
                                            @foreach (var product in Model.Products)
                                            {
                                                var foundProductSpec = product.SpecificationAttributeModels.FirstOrDefault(psa => psa.SpecificationAttributeId == specificationAttribute.SpecificationAttributeId);
                                                if (foundProductSpec != null)
                                                {
                                                    <div class="spec-other">@Html.Raw(foundProductSpec.ValueRaw)</div>
                                                }
                                                else
                                                {
                                                    <div class="spec-other"></div>
                                                }
                                            }
                                            @{ var count = Model.Products.Count;}
                                            @if (count < 4)
                                            {
                                                for (int i = 0; i < 4 - count; i++)
                                                {
                                                    <div class="spec-other"></div>
                                                }
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    else
    {
        <div class="no-data">
            @T("Products.Compare.NoItems")
        </div>
    }
</div>

<div class="compare-prd-popup">
    <div class="compare-prd-popup-body">
        <div class="compare-prd-popup-data">
            <div class="compare-prd-popup-head">
                <i class="close-add-prd far fa-times-circle"></i>
            </div>
            <div id="compareAddProductPopup" class="product-grid home-page-product-grid">

            </div>
        </div>
    </div>
</div>
<div class="comp-layer"></div>

<div class="loading-popup"><i></i></div>

<script>
    $(document).ready(function () {
        $('.toggleData', ".comp-according").click(function (e) {
            e.preventDefault();
            var $this = $(this);
            $('.toggleData', ".comp-according").removeClass('according-active');
            if ($this.next().hasClass('show')) {
                $this.next().removeClass('show');
                $this.next().slideUp(350);
                $this.removeClass('according-active');
            } else {
                $this.parent().parent().find('li .inner').removeClass('show');
                $this.parent().parent().find('li .inner').slideUp(350);
                $this.toggleClass('according-active');
                $this.next().slideToggle(350);
                $this.next().addClass('show');
            }
        });

        $('.show-label', ".show-more").click(function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.toggleClass('enable');
            $this.next().toggle();
        });

        $('.add-prd').click(function (e) {
            e.preventDefault();
            $(".loading-popup").css("display","block");
            var postData = {
                categoryid: @(productCategory != null ? productCategory.CategoryId : 0)
            };

            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: "POST",
                url: "/Product/AddProductToCompare",
                data: postData,
                dataType: 'json',
                success: function (response) {
                    $("#compareAddProductPopup").html(response.html);
                    $(".compare-prd-popup").addClass("active-prd-popup");
                    $(".comp-layer").addClass("active-comp-layer-popup");
                    $("body").addClass("enable-popup-prd");
                    $(".loading-popup").css("display", "none");
                },
                failure: function (response) {
                    alert(response);
                }
            });

        });
        $('.close-add-prd').click(function (e) {
            e.preventDefault();
            $(".compare-prd-popup").removeClass("active-prd-popup");
            $(".comp-layer").removeClass("active-comp-layer-popup");
            $("body").removeClass("enable-popup-prd");
        });
    });

    function AddToCompare(url) {
        $('.close-add-prd').click();
        $(".loading-popup").css("display", "block");
        $.ajax({
            cache: false,
            type: "POST",
            url: url,
            dataType: 'json',
            success: function (response) {
                if (response.success == true)
                {
                    window.location.href = '@Url.RouteUrl("CompareProducts")';
                };
                //$(".loading-popup").css("display", "none");
            },
            failure: function (response) {
                $(".loading-popup").css("display", "none");
            }
        });
}
</script>