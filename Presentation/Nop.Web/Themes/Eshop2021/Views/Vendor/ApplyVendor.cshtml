@using System.Text.Encodings.Web
@model ApplyVendorModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Vendors.Apply").Text);
    //page class
    Html.AppendPageCssClassParts("html-apply-vendor-page");
}
<div class="page apply-vendor-page">
    <div class="container">
        <div class="page-title">
            <h1>@T("PageTitle.Vendors.Apply")</h1>
        </div>
        <div class="page-body">
            @await Component.InvokeAsync("TopicBlock", new { systemName = "ApplyVendor" })
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ApplyVendorTop })
            @if (Model.DisableFormInput)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                <form asp-route="ApplyVendorAccount" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="row justify-content-md-center">
                                <div class="col-lg-7 col-md-10">
                                    <div class="inputs form-group row">
                                        <label class="col-md-2 col-form-label" asp-for="Name" asp-postfix=":"></label>
                                        <div class="col-md-9 col-12">
                                            <input asp-for="Name" class="name form-control" placeholder="@T("Vendors.ApplyAccount.Name.Hint")" />
                                            <nop-required />
                                            <span asp-validation-for="Name"></span>
                                        </div>
                                    </div>
                                    <div class="inputs form-group row">
                                        <label class="col-md-2 col-form-label" asp-for="Email" asp-postfix=":"></label>
                                        <div class="col-md-9 col-12">
                                            <input asp-for="Email" class="name form-control" placeholder="@T("Vendors.ApplyAccount.Email.Hint")" />
                                            <nop-required />
                                            <span asp-validation-for="Email"></span>
                                        </div>
                                    </div>
                                    <div class="inputs form-group row">
                                        <label class="col-md-2 col-form-label" asp-for="Description" asp-postfix=":"></label>
                                        <div class="col-md-9 col-12">
                                            <textarea asp-for="Description" class="description form-control"></textarea>
                                        </div>
                                    </div>
                                    <div class="inputs form-group row">
                                        <label class="col-md-2 col-form-label">@T("Vendors.ApplyAccount.Picture"):</label>
                                        <div class="col-md-9 col-12">
                                            <input name="uploadedFile" class="form-control" type="file" />
                                        </div>
                                    </div>
                                    @await Html.PartialAsync("_VendorAttributes", Model.VendorAttributes)
                                    @if (Model.DisplayCaptcha)
                                    {
                                        <div class="form-group row">
                                            <div class="col-md-3"></div>
                                            <div class="col-md-9 col-12">
                                                <div class="captcha-box">
                                                    <nop-captcha />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if (Model.TermsOfServiceEnabled)
                                    {
                                        <script asp-location="Footer">
                                $(document).ready(function() {
                                    $('#apply-vendor').on('click', function() {
                                        if ($('#termsofservice').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        } else {
                                            //just show validation errors, dont post
                                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Vendors.ApplyAccount.AcceptTermsOfService.Required").Text))');
                                            return false;
                                        }
                                    });
                                });
                                        </script>
                                        <div class="terms-of-service">
                                            <input id="termsofservice" type="checkbox" name="termsofservice" />
                                            <label for="termsofservice">@T("Vendors.ApplyAccount.AcceptTermsOfService")</label>
                                            @if (Model.TermsOfServicePopup)
                                            {
                                                <span class="read" id="read-acceptterms">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</span>
                                                <script asp-location="Footer">
                                        $(document).ready(function() {
                                            $('#read-acceptterms').on('click',
                                                function (e) {
                                                    displayPopupContentFromUrl(
                                                        '@Url.RouteUrl("TopicPopup", new {SystemName = "VendorTermsOfService"})',
                                                        '@T("Vendors.ApplyAccount.AcceptTermsOfService")');
                                                });
                                        });
                                                </script>
                                            }
                                            else
                                            {
                                                <a class="read" id="read-acceptterms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("VendorTermsOfService") })">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</a>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="buttons">
                        <input type="submit" id="apply-vendor" name="apply-vendor" class="button-1 apply-vendor-button btn btn-primary" value="@T("Vendors.ApplyAccount.Button")" />
                    </div>
                </form>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ApplyVendorBottom })
        </div>
    </div>
</div>
