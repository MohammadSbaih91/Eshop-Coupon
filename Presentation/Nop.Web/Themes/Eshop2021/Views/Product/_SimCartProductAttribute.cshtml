@model IList<ProductDetailsModel.ProductAttributeModel>
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Media
@using System.Text
@using Nop.Services.Media
@using Nop.Services
@using Nop.Services.Configuration;

@inject IDownloadService downloadService
@inject CatalogSettings catalogSettings
@inject ISettingService settingService
@{
    
    var attributes = Model.Where(p => p.Name == "Choose your number" || p.Name == "قم بإختيار رقمك").ToList();

}
@if (Model.Count > 0)
{
    <div class="attributes custom-radio-check">
        <div class="row">
            @foreach (var attribute in attributes)
            {
                var controlId = $"product_attribute_{attribute.Id}";
                var textPrompt = !string.IsNullOrEmpty(attribute.TextPrompt) ? attribute.TextPrompt : attribute.Name;
                <div class="col-lg-12">
                    <div class="attr-group">
                        <div id="@($"product_attribute_label_{attribute.Id}")">
                        </div>
                        <div id="@($"product_attribute_input_{attribute.Id}")">
                            @switch (attribute.AttributeControlType)
                            {
                                case AttributeControlType.DropdownList:
                                    {
                                        var preSelected = attribute.Values.Where(p => p.IsPreSelected).FirstOrDefault();
                                        var defaultValue = 0;
                                        var defaultText = "";

                                        if (!attribute.IsRequired)
                                        {
                                            defaultText = "---";
                                        }
                                        else
                                        {
                                            var firstValue = attribute.Values.FirstOrDefault();
                                            if (firstValue != null)
                                            {
                                                defaultValue = firstValue.Id;
                                                defaultText = firstValue.Name;
                                            }
                                        }
                                        if (preSelected != null)
                                        {
                                            defaultValue = preSelected.Id;
                                            defaultText = preSelected.Name;
                                        }

                                        <div class="select-sim-number">
                                            <label>@T("ProductDetail.SelectSimCard")</label>
                                            <div class="dropdown common-dropdown" id="div_@(controlId)">
                                                <input type="hidden" id="@(controlId)" name="@(controlId)" value="@defaultValue" />
                                                <div class="dropdown-toggle" id="txt_@(controlId)" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    @defaultText
                                                </div>
                                                <div class="dropdown-menu">
                                                    @if (!attribute.IsRequired)
                                                    {
                                                        <a onclick="attributeDropDownChange(this,'@(controlId)','0','---')" class="dropdown-item">---</a>
                                                    }
                                                    @foreach (var attributeValue in attribute.Values)
                                                    {
                                                        <a onclick="attributeDropDownChange(this,'@(controlId)','@(attributeValue.Id)','@(attributeValue.Name)')" class="dropdown-item">@attributeValue.Name</a>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        foreach (var attributeValue in attribute.Values.Where(value => value.CustomerEntersQty))
                                        {
                                            <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                            </div>
                                        }
                                        <script>
                                    $(document).ready(function() {
                                        showHideDropdownQuantity("@controlId");
                                    });
                                        </script>
                                    }
                                    break;
                                case AttributeControlType.RadioList:
                                    {
                                        if (attribute.IsShowButton)
                                        {
                                            <ul class="option-list radio-btn">
                                                @foreach (var attributeValue in attribute.Values)
                                                {
                                                    <li>
                                                        <div class="custom-control custom-radio">
                                                            <input class="custom-control-input" id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected"
                                                                   @(attribute.Values.Any(value => value.CustomerEntersQty) ? Html.Raw($"onclick=\"showHideRadioQuantity('{controlId}')\"") : null) />
                                                            <label class="custom-control-label" for="@(controlId)_@(attributeValue.Id)"><span>@attributeValue.Name</span></label>
                                                        </div>

                                                        @if (attributeValue.CustomerEntersQty)
                                                        {
                                                            <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                                <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                                <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                                            </div>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <div class="device-package">
                                                @foreach (var attributeValue in attribute.Values)
                                                {
                                                    
                                                    <div class="custom-control custom-radio custom-control-inline">
                                                        <input type="radio" value="@attributeValue.Id" id="@(controlId)_@(attributeValue.Id)" name="@(controlId)" class="custom-control-input" checked="@attributeValue.IsPreSelected"
                                                               @(attribute.Values.Any(value => value.CustomerEntersQty) ? Html.Raw($"onclick=\"showHideRadioQuantity('{controlId}')\"") : null)>
                                                        <label class="custom-control-label" for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                                                    </div>

                                                    @if (attributeValue.CustomerEntersQty)
                                                    {
                                                        <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                            <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                            <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        }
                                        <script type="text/javascript">
                                    $(document).ready(function() {
                                        showHideRadioQuantity("@controlId");
                                    });
                                        </script>
                                    }
                                    break;
                                case AttributeControlType.Checkboxes:
                                case AttributeControlType.ReadonlyCheckboxes:
                                    {
                                        <ul class="option-list">
                                            @foreach (var attributeValue in attribute.Values)
                                            {
                                                <li>
                                                    <div class="custom-control custom-checkbox">
                                                        <input class="custom-control-input" id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null)
                                                               @(attributeValue.CustomerEntersQty ? Html.Raw($"onchange=\"showHideCheckboxQuantity('{controlId}_{attributeValue.Id}')\"") : null) />
                                                        <label class="custom-control-label" for="@(controlId)_@(attributeValue.Id)"><span>@attributeValue.Name</span></label>
                                                    </div>
                                                    @if (attributeValue.CustomerEntersQty)
                                                    {
                                                        <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                            <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                            <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                                            <script type="text/javascript">
                                                        $(document).ready(function() {
                                                            showHideCheckboxQuantity('@(controlId)_@(attributeValue.Id)');
                                                        })
                                                            </script>
                                                        </div>
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    }
                                    break;
                                case AttributeControlType.TextBox:
                                    {
                                        <input name="@(controlId)" type="text" class="textbox form-control" id="@(controlId)" value="@attribute.DefaultValue" />
                                    }
                                    break;
                                case AttributeControlType.MultilineTextbox:
                                    {
                                        <textarea class="form-control" cols="20" id="@(controlId)" name="@(controlId)">@attribute.DefaultValue</textarea>

                                    }
                                    break;
                                case AttributeControlType.Datepicker:
                                    {
                                        <nop-date-picker asp-day-name="@(controlId + "_day")"
                                                         asp-month-name="@(controlId + "_month")"
                                                         asp-year-name="@(controlId + "_year")"
                                                         asp-begin-year="@(DateTime.Now.Year)"
                                                         asp-end-year="@(DateTime.Now.Year + catalogSettings.CountDisplayedYearsDatePicker)"
                                                         asp-selected-day="@attribute.SelectedDay"
                                                         asp-selected-month="@attribute.SelectedMonth"
                                                         asp-selected-year="@attribute.SelectedYear" />
                                    }
                                    break;
                                case AttributeControlType.FileUpload:
                                    {
                                        Download download = null;
                                        if (!string.IsNullOrEmpty(attribute.DefaultValue))
                                        {
                                            download = downloadService.GetDownloadByGuid(new Guid(attribute.DefaultValue));
                                        }

                                        //register CSS and JS
                                        Html.AddCssFileParts(ResourceLocation.Footer, "~/lib/fineuploader/fine-uploader.min.css");
                                        Html.AddScriptParts(ResourceLocation.Footer, "~/lib/fineuploader/jquery.fine-uploader.min.js");

                                        //ex. ['jpg', 'jpeg', 'png', 'gif'] or []
                                        var allowedFileExtensions = string.Join(", ", attribute.AllowedFileExtensions.Select(x => "'" + x.Trim() + "'").ToList());

                                        if (download != null)
                                        {
                                            <input id="@(controlId)" name="@(controlId)" type="hidden" value="@download.DownloadGuid" />
                                        }
                                        else
                                        {
                                            <input id="@(controlId)" name="@(controlId)" type="hidden" />
                                        }

                                        @*fine uploader container*@
                                        <div id="@(controlId)uploader"></div>
                                        @*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
                                        <script type="text/template" id="@(controlId)-qq-template">
                                            <div class="qq-uploader-selector qq-uploader">
                                                <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
                                                    <span>@T("Common.FileUploader.DropFiles")</span>
                                                </div>
                                                <div class="qq-upload-button-selector qq-upload-button">
                                                    <div>@T("Common.FileUploader.Upload")</div>
                                                </div>
                                                <span class="qq-drop-processing-selector qq-drop-processing">
                                                    <span>@T("Common.FileUploader.Processing")</span>
                                                    <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
                                                </span>
                                                <ul class="qq-upload-list-selector qq-upload-list">
                                                    <li>
                                                        <div class="qq-progress-bar-container-selector">
                                                            <div class="qq-progress-bar-selector qq-progress-bar"></div>
                                                        </div>
                                                        <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                                                        <span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
                                                        <span class="qq-upload-file-selector qq-upload-file"></span>
                                                        <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                                                        <span class="qq-upload-size-selector qq-upload-size"></span>
                                                        <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">@T("Common.FileUploader.Cancel")</a>
                                                        <a class="qq-upload-retry-selector qq-upload-retry" href="#">@T("Common.FileUploader.Retry")</a>
                                                        <a class="qq-upload-delete-selector qq-upload-delete" href="#">@T("Common.FileUploader.Delete")</a>
                                                        <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
                                                    </li>
                                                </ul>
                                            </div>
                                        </script>
                                        <script>
                                    $(document).ready(function() {
                                        $("#@(controlId)uploader").fineUploader({
                                            request: {
                                                endpoint: '@(Url.RouteUrl("UploadFileProductAttribute", new { attributeId = attribute.Id }))'
                                            },
                                            template: "@(controlId)-qq-template",
                                            multiple: false,
                                            validation: {
                                                allowedExtensions: [@Html.Raw(allowedFileExtensions)]
                                            }
                                        }).on("complete", function(event, id, name, responseJSON, xhr) {
                                            $("#@(controlId)").val(responseJSON.downloadGuid);
                                            if (responseJSON.success) {
                                                $("#@(controlId + "downloadurl")").html("<a href='" + responseJSON.downloadUrl + "'>@T("Common.FileUploader.DownloadUploadedFile")</a>");
                                                $("#@(controlId + "remove")").show();
                                            }
                                            if (responseJSON.message) {
                                                alert(responseJSON.message);
                                            }
                                        });

                                        $("#@(controlId + "remove")").on('click', function(e) {
                                            $("#@(controlId + "downloadurl")").html("");
                                            $("#@(controlId)").val('');
                                            $(this).hide();
                                        });
                                    });
                                        </script>
                                        <div id="@(controlId + "downloadurl")">
                                            @if (download != null)
                                            {
                                                <a href="@(Url.Action("GetFileUpload", "Download", new {downloadId = download.DownloadGuid}))" class="download-uploaded-file">@T("Common.FileUploader.DownloadUploadedFile")</a>
                                            }
                                        </div>
                                        <div>
                                            @if (download != null)
                                            {
                                                <a id="@(controlId + "remove")" class="remove-download-button">@T("Common.FileUploader.RemoveDownload")</a>
                                            }
                                            else
                                            {
                                                <a id="@(controlId + "remove")" class="remove-download-buttonn" style="display: none;">@T("Common.FileUploader.RemoveDownload")</a>
                                            }
                                        </div>

                                    }
                                    break;
                                case AttributeControlType.ColorSquares:
                                    {
                                        <ul class="option-list attribute-squares color-squares" id="color-squares-@(attribute.Id)">
                                            @foreach (var attributeValue in attribute.Values)
                                            {
                                                
                                                <li @(attributeValue.IsPreSelected ? @Html.Raw(" class=\"selected-value\"") : null)>
                                                    <label for="@(controlId)_@(attributeValue.Id)">
                                                        <span class="attribute-square-container" title="@attributeValue.Name">
                                                            <span class="attribute-square" style="background-color:@(attributeValue.ColorSquaresRgb);">&nbsp;</span>
                                                        </span>
                                                        <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected"
                                                               @(attribute.Values.Any(value => value.CustomerEntersQty) ? Html.Raw($"onclick=\"showHideRadioQuantity('{controlId}')\"") : null) />
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                        foreach (var attributeValue in attribute.Values.Where(value => value.CustomerEntersQty))
                                        {
                                            <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                            </div>
                                        }
                                        <script>
                                    $(document).ready(function() {
                                        $('.attributes #color-squares-@(attribute.Id)').on('click', 'input', function(event) {
                                            $('.attributes #color-squares-@(attribute.Id)').find('li').removeClass('selected-value');
                                            $(this).closest('li').addClass('selected-value');
                                        });
                                        showHideRadioQuantity("@controlId");
                                    });
                                        </script>
                                    }
                                    break;
                                case AttributeControlType.ImageSquares:
                                    {
                                        <ul class="option-list attribute-squares image-squares" id="image-squares-@(attribute.Id)">
                                            @foreach (var attributeValue in attribute.Values)
                                            {
                                                 <li @(attributeValue.IsPreSelected ? @Html.Raw(" class=\"selected-value\"") : null)>
                                                    <label for="@(controlId)_@(attributeValue.Id)">
                                                        <span class="attribute-square-container">
                                                            <span class="attribute-square" style="background: url('@(attributeValue.ImageSquaresPictureModel.ImageUrl)') 50% 50% no-repeat;">&nbsp;</span>
                                                        </span>
                                                        <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected"
                                                               @(attribute.Values.Any(value => value.CustomerEntersQty) ? Html.Raw($"onclick=\"showHideRadioQuantity('{controlId}', true)\"") : null) />
                                                    </label>
                                                    <div class="tooltip-container">
                                                        <div class="tooltip-header">@attributeValue.Name</div>
                                                        <div class="tooltip-body"><img src="@(attributeValue.ImageSquaresPictureModel.FullSizeImageUrl)" alt="@attributeValue.Name" /></div>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                        foreach (var attributeValue in attribute.Values.Where(value => value.CustomerEntersQty))
                                        {
                                            <div class="qty-box" id="@(controlId)_@(attributeValue.Id)_qty_box" style="display:none">
                                                <label for="@(controlId)_@(attributeValue.Id)_qty">@(T("Products.ProductAttributes.PriceAdjustment.Quantity").Text)</label>
                                                <input class="form-control" type="text" name="@(controlId)_@(attributeValue.Id)_qty" id="@(controlId)_@(attributeValue.Id)_qty" value="@(attributeValue.Quantity)" />
                                            </div>
                                        }
                                        <script>
                                    $(document).ready(function() {
                                        $('.attributes #image-squares-@(attribute.Id)').on('click', 'input', function(event) {
                                            $('.attributes #image-squares-@(attribute.Id)').find('li').removeClass('selected-value');
                                            $(this).closest('li').addClass('selected-value');
                                        });
                                        showHideRadioQuantity("@controlId", true);
                                    });
                                        </script>
                                    }
                                    break;
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@*@model IList<ProductDetailsModel.ProductAttributeModel>
    @using Nop.Core.Domain.Catalog
    @using Nop.Core.Domain.Media
    @using System.Text
    @using Nop.Services.Media
    @using Nop.Services
    @using Nop.Services.Configuration;

    @inject IDownloadService downloadService
    @inject CatalogSettings catalogSettings
    @inject ISettingService settingService
    @{
        var simCardNumber = settingService.GetSettingByKey<int>(EShopHelper.SimCardNumber);

        var attribute = Model.Where(p => p.ProductAttributeId == simCardNumber).FirstOrDefault();
    }
    @if (attribute != null)
    {
        <div class="attributes custom-radio-check">
            <div class="row">
                @{
                    var controlId = $"product_attribute_{attribute.Id}";
                    var textPrompt = !string.IsNullOrEmpty(attribute.TextPrompt) ? attribute.TextPrompt : attribute.Name;
                    <div class="col-lg-12">
                        <div class="attr-group simcard">
                            <div id="@($"product_attribute_label_{attribute.Id}")">
                            </div>
                            <div id="@($"product_attribute_input_{attribute.Id}")">
                                @{
                                    var preSelected = attribute.Values.Where(p => p.IsPreSelected).FirstOrDefault();
                                    var defaultValue = 0;
                                    var defaultText = "";

                                    if (!attribute.IsRequired)
                                    {
                                        defaultText = "---";
                                    }
                                    else
                                    {
                                        var firstValue = attribute.Values.FirstOrDefault();
                                        if (firstValue != null)
                                        {
                                            defaultValue = firstValue.Id;
                                            defaultText = firstValue.Name;
                                        }
                                    }
                                    if (preSelected != null)
                                    {
                                        defaultValue = preSelected.Id;
                                        defaultText = preSelected.Name;
                                    }

                                    <div class="select-sim-number">
                                        <label>@T("ProductDetail.SelectSimCard")</label>
                                        <div class="dropdown common-dropdown" id="div_@(controlId)">
                                            <input type="hidden" id="@(controlId)" name="@(controlId)" value="@defaultValue" />
                                            <div class="dropdown-toggle" id="txt_@(controlId)" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                @defaultText
                                            </div>
                                            <div class="dropdown-menu">
                                                @if (!attribute.IsRequired)
                                                {
                                                    <a onclick="attributeDropDownChange(this,'@(controlId)','0','---')" class="dropdown-item">---</a>
                                                }
                                                @foreach (var attributeValue in attribute.Values)
                                                {
                                                    <a onclick="attributeDropDownChange(this,'@(controlId)','@(attributeValue.Id)','@(attributeValue.Name)', '@(attributeValue.PriceAdjustment)', '@(attributeValue.PriceAdjustmentValue)')" class="dropdown-item">@attributeValue.Name</a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }*@

