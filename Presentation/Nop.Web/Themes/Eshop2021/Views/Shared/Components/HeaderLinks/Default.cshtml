@model HeaderLinksModel
@using System.Text.Encodings.Web
@using Nop.Core
@using Nop.Services.Configuration
@inject IWorkContext workContext
@inject ISettingService settingService
@{
    var lang = workContext.WorkingLanguage.UniqueSeoCode;
    ViewBag.ShoppingCartItems = Model.ShoppingCartItems;
    var ssoUrl = settingService.GetSettingByKey<string>("orangeexternalauthsettings.ornageurl");
    ssoUrl = ssoUrl.ToLower().Replace("{lanseo}", lang);
}
<div class="header-links">
    <ul>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
        @*<li class="change-font-dropdown">
            <div class="dropdown">
                <div class="dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    A
                </div>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a href="#">A</a>
                    <a href="#">A</a>
                    <a href="#">A</a>
                </div>
            </div>
        </li>
        <li class="switch">
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" id="customSwitch1">
                <label class="custom-control-label" for="customSwitch1"><span></span></label>
            </div>
        </li>*@
        @*@if (Model.IsAuthenticated)
        {
            <li><a href="@Url.RouteUrl("CustomerInfo")" class="icon-account icon-user"></a></li>
        }
        else
        {
            <li><a href="@Url.RouteUrl("Login")" class="icon-login icon-user"></a></li>
        }*@
        @if (Model.IsAuthenticated)
        {
            <li><a href="@Url.RouteUrl("Logout")">@T("HeaderLinkes.Logout")</a></li>
        }
        @if (Model.IsAuthenticated)
        {
            <li><a href="@Url.RouteUrl("CustomerInfo")" class="icon-login icon-user"></a></li>
        }
        else
        {
            <li><a href="@(ssoUrl)" class="icon-login icon-user"></a></li>
        }
        <li class="mobile-search-icon"><a class="search-menu"><i></i></a></li>
        @if (Model.AllowPrivateMessages)
        {
            <li>
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                    <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                    <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                </a>
            </li>
        }
        @*@if (Model.WishlistEnabled)
        {
            <li>
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                    <span class="wishlist-label">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            </li>
        }*@
        @if (Model.ShoppingCartEnabled)
        {
            <li id="topcartlink">
                <a class="ico-cart">
                    <span class="cart-qty">@Model.ShoppingCartItems</span>
                </a>
            </li>
        }
        @await Component.InvokeAsync("LanguageSelector")
        <li class="menu-bar es-menu">
            <small>
                <span></span>
                <span></span>
                <span></span>
            </small>
        </li>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter })
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
    @if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                //$('.header').on('mouseenter', '#topcartlink', function () {
                //    $('#flyout-cart').addClass('active');
                //});
                //$('.header').on('mouseleave', '#topcartlink', function () {
                //    $('#flyout-cart').removeClass('active');
                //});
                //$('.header').on('mouseenter', '#flyout-cart', function () {
                //    $('#flyout-cart').addClass('active');
                //});
                //$('.header').on('mouseleave', '#flyout-cart', function () {
                //    $('#flyout-cart').removeClass('active');
                //});
                $('#topcartlink').click(function (e) {
                    OpenCartDrawer();
                });
            });
        </script>
    }
</div>
