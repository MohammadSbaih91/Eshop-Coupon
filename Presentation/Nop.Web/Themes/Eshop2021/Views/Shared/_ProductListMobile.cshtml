@model ShoppingCartModel

@using Nop.Core

@inject IWebHelper webHelper

<style>
    .qty-input-mobile {
        width: 25% !important;
        height: 25px !important;
    }
</style>
<div class="table-wrapper">
    @foreach (var item in Model.Items)
    {
        //if (item.ProductId != 152 && item.ProductId != 150)
        //{
            <div class="cart-product">
                <div class="row">
                    <div class="cart-imgpart">
                        @if (Model.ShowProductImages)
                        {
                            <div>
                                <a href="@UrlStrucutre.UrlDecode(Url.RouteUrl("Product", new { SeName = item.ProductSeName }))">
                                    <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                </a>
                            </div>
                        }
                        <div>
                            <a href="@UrlStrucutre.UrlDecode(Url.RouteUrl("Product", new {SeName = item.ProductSeName}))" class="product-name" title="@item.ProductName">@item.ProductName</a>
                            @if (!string.IsNullOrEmpty(item.AttributeInfo))
                            {
                                <div class="attributes">
                                    @Html.Raw(item.AttributeInfo)
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(item.RecurringInfo))
                            {
                                <div class="recurring-info">
                                    @Html.Raw(item.RecurringInfo)
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(item.RentalInfo))
                            {
                                <div class="rental-info">
                                    @Html.Raw(item.RentalInfo)
                                </div>
                            }
                            @if (item.Warnings.Count > 0)
                            {
                                <div class="message-error">
                                    <ul>
                                        @foreach (var warning in item.Warnings)
                                        {
                                            <li>@Html.Raw(warning)</li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                        @if (Model.ShowSku)
                        {
                            <div class="sku">
                                <label class="td-title">@T("ShoppingCart.SKU"):</label>
                                <span class="sku-number">@item.Sku</span>
                            </div>
                        }
                    </div>
                    <div class="cart-detailpart">
                        <div class="cart-mgT10">
                            <label class="td-title" for="itemquantity@(item.Id)">@T("ShoppingCart.Quantity"):</label>
                            @if (Model.IsEditable)
                            {
                                if (item.AllowedQuantities.Count > 0)
                                {
                                    <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
                                        @foreach (var qty in item.AllowedQuantities)
                                        {
                                            <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" number-only value="@(item.Quantity)" class="qty-input qty-input-mobile" />
                                }
                            }
                            else
                            {
                                <span class="product-quantity">@item.Quantity</span>
                            }
                        </div>
                        <div>
                            <label class="td-title">@T("ShoppingCart.UnitPrice"):</label>
                            <span class="product-unit-price">@item.UnitPrice</span>
                            @await Html.PartialAsync("_TaxSplitInfo", item.TaxSplitInfo)
                        </div>
                        <div class="cart-subtotal">
                            @{ item.TaxSplitInfo.Quantity = item.Quantity; }
                            @await Html.PartialAsync("_TaxSplitInfo.Total", item.TaxSplitInfo)
                            <label class="td-title">@T("ShoppingCart.ItemTotal"):</label>
                            <span class="product-subtotal">@item.SubTotal</span>

                            @if (!string.IsNullOrEmpty(item.Discount))
                            {
                                <div class="discount">
                                    @T("ShoppingCart.ItemYouSave", item.Discount)
                                </div>
                                if (item.MaximumDiscountedQty.HasValue)
                                {
                                    <div class="discount-additional-info">
                                        @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row cart-mgT10">
                    <div class="cart-vendor">
                        @if (Model.IsEditable && item.AllowItemEditing)
                        {
                           <text>&nbsp;</text>
                        }
                        @if (Model.ShowVendorName)
                        {
                            <div class="vendor">
                                <label class="td-title">@T("ShoppingCart.VendorName"):</label>
                                <span class="vendor-name">@item.VendorName</span>
                            </div>
                        }
                    </div>
                    <div class="cart-editRemove">
                        @if (Model.IsEditable && item.AllowItemEditing)
                        {
                            var editCartItemUrl = UrlStrucutre.UrlDecode(Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol));
                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                            <div class="edit-item">
                                <a href="@editCartItemUrl">@T("Common.Edit")</a>
                            </div>
                        }
                        @if (Model.IsEditable && !item.DisableRemoval)
                        {
                            <div>
                                <label class="td-title" for="removefromcart@(item.Id)">@T("ShoppingCart.Remove"):</label>
                                <input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        //}
    }
</div>
